---
apiVersion: charts.kubealex.com/v1
kind: K8SMediaserver
metadata:
  name: mediaserver
spec:
  # Default values copied from <project_dir>/helm-charts/k8s-mediaserver/values.yaml
  general:
    ingress_host: mediaserver.nagtzaam.org
    plex_ingress_host: plex.nagtzaam.org
    image_tag: latest
    podDistribution: cluster # can be "spread" or "cluster"
    #UID to run the process with
    puid: 1000
    #GID to run the process with
    pgid: 1000
    #Persistent storage selections and pathing
    storage:
      customVolume: true #set to true if not using a PVC (must provide volume below)
      accessMode: ""
      pvcName: mediaserver-pvc
      size: 5Gi
      pvcStorageClass: "nfs-storage"
      # the path starting from the top level of the pv you're passing. If your share is server.local/share/, then tv is server.local/share/media/tv
      subPaths:
        tv: media/tv
        movies: media/movies
        downloads: downloads
        transmission: transmission
        sabnzbd: sabnzbd
        config: config
      volumes:
        hostPath:
          path: /mediaserver/
    ingress:
      ingressClassName: ""
    nodeSelector: {}

---
apiVersion: v1
kind: Sonarr
metadata:
  name: sonarr
spec:
  enabled: true
  container:
    image: docker.io/linuxserver/sonarr
    nodeSelector: {}
    port: 8989
  service:
    type: ClusterIP
    port: 8989
    nodePort: null
    extraLBService: true
    extraLBAnnotations: {}
  ingress:
    enabled: false
    annotations: {}
    path: /sonarr
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume:
    - name: sonarr-config
      persistentVolumeClaim:
        claimName: pvc-sonarr-config

persistentVolumeClaim:
  - name: pvc-sonarr-config
    spec:
      storageClassName: nfs-storage
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Radarr
metadata:
  name: radarr
spec:
  enabled: true
  container:
    image: docker.io/linuxserver/radarr
    nodeSelector: {}
    port: 7878
  service:
    type: ClusterIP
    port: 7878
    nodePort: null
    extraLBService: true
    extraLBAnnotations: {}
  ingress:
    enabled: false
    annotations: {}
    path: /radarr
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume:
    - name: radarr-config
      persistentVolumeClaim:
        claimName: pvc-radarr-config

persistentVolumeClaim:
  - name: pvc-radarr-config
    spec:
      storageClassName: nfs-storage
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Jackett
metadata:
  name: jackett
spec:
  enabled: true
  container:
    image: docker.io/linuxserver/jackett
    nodeSelector: {}
    port: 9117
  service:
    type: ClusterIP
    port: 9117
    nodePort: null
    extraLBService: true
    extraLBAnnotations: {}
  ingress:
    enabled: false
    annotations: {}
    path: /jackett
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume:
    - name: jackett-config
      persistentVolumeClaim:
        claimName: pvc-jackett-config

persistentVolumeClaim:
  - name: pvc-jackett-config
    spec:
      storageClassName: nfs-storage
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Transmission
metadata:
  name: transmission
spec:
  enabled: true
  container:
    image: docker.io/linuxserver/transmission
    nodeSelector: {}
    port:
      utp: 9091
      peer: 51413
  service:
    utp:
      type: ClusterIP
      port: 9091
      nodePort: null
      extraLBService: true
      extraLBAnnotations: {}
    peer:
      type: ClusterIP
      port: 51413
      nodePort: null
      extraLBService: true
      extraLBAnnotations: {}
  ingress:
    enabled: false
    annotations: {}
    path: /transmission
    tls:
      enabled: false
      secretName: ""
  config:
    auth:
      enabled: false
      username: ""
      password: ""
  resources: {}
  volume:
    - name: transmission-config
      persistentVolumeClaim:
        claimName: pvc-transmission-config

persistentVolumeClaim:
  - name: pvc-transmission-config
    spec:
      storageClassName: nfs-storage
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Sabnzbd
metadata:
  name: sabnzbd
spec:
  enabled: true
  container:
    image: docker.io/linuxserver/sabnzbd
    nodeSelector: {}
    port:
      http: 8080
      https: 9090
  service:
    http:
      type: ClusterIP
      port: 8080
      nodePort: null
      extraLBService: true
      extraLBAnnotations: {}
    https:
      type: ClusterIP
      port: 9090
      nodePort: null
      extraLBService: true
      extraLBAnnotations: {}
  ingress:
    enabled: false
    annotations: {}
    path: /sabnzbd
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume:
    - name: sabnzbd-config
      persistentVolumeClaim:
        claimName: pvc-sabnzbd-config

persistentVolumeClaim:
  - name: pvc-sabnzbd-config
    spec:
      storageClassName: nfs-storage
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Prowlarr
metadata:
  name: prowlarr
spec:
  enabled: true
  container:
    image: docker.io/linuxserver/prowlarr
    tag: develop
    nodeSelector: {}
    port: 9696
  service:
    type: ClusterIP
    port: 9696
    nodePort: null
    extraLBService: true
    extraLBAnnotations: {}
  ingress:
    enabled: false
    annotations: {}
    path: /prowlarr
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume:
    - name: prowlarr-config
      persistentVolumeClaim:
        claimName: pvc-prowlarr-config

persistentVolumeClaim:
  - name: pvc-prowlarr-config
    spec:
      storageClassName: nfs-storage
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi

---
apiVersion: v1
kind: Plex
metadata:
  name: plex
spec:
  enabled: true
  claim: "CHANGEME"
  replicaCount: 1
  container:
    image: docker.io/linuxserver/plex
    nodeSelector: {}
    port: 32400
  service:
    type: ClusterIP
    port: 32400
    nodePort: null
    extraLBService: true
    extraLBAnnotations: {}
  ingress:
    enabled: false
    annotations: {}
    tls:
      enabled: false
      secretName: ""
  resources: {}
  volume:
    - name: plex-config
      persistentVolumeClaim:
        claimName: pvc-plex-config

persistentVolumeClaim:
  - name: pvc-plex-config
    spec:
      storageClassName: nfs-storage
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
